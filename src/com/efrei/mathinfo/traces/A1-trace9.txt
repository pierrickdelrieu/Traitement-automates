Automate numéro : 9
Affichage de l'automate : 

2 mots : [a, b]
6 états : [0, 1, 2, 3, 4, 5]
1 entrées : [1]
2 sorties : [0, 1]
8 transitions : 
0->a->[2]
0->b->[x] 
1->a->[2]
1->b->[x] 
2->a->[3]
2->b->[3]
3->a->[4]
3->b->[x] 
4->a->[5]
4->b->[5]
5->a->[0]
5->b->[x] 

------ Tentative de minimisation de votre automate ------

Votre automate n'est pas complet à cause de l'état 0
En effet celui-ci n'a des transitions que pour [a]
Avant d'être minimisé, votre automate doit être complet, nous le complétons

------ Tentative de complétion de votre automate ------


------ Votre automate est déja déterministe ------

Votre automate n'est pas complet à cause de l'état 0
En effet celui-ci n'a des transitions que pour [a]

Votre automate est bien déterministe, il peut être complété !


------ Complétion de votre automate ------- 

Affichage de l'automate : 

2 mots : [a, b]
7 états : [0, 1, 2, 3, 4, 5, P]
1 entrées : [1]
2 sorties : [0, 1]
14 transitions : 
0->a->[2]
0->b->[P]
1->a->[2]
1->b->[P]
2->a->[3]
2->b->[3]
3->a->[4]
3->b->[P]
4->a->[5]
4->b->[5]
5->a->[0]
5->b->[P]
P->a->[P]
P->b->[P]


------ Complétion terminée ! ------


Votre automate est bien déterministe et complet, toutes les conditions sont remplies !


------ Début de la minimisation ------


------ Récupération de la partition finale ------

theta (0): [[0, 1], [2, 3, 4, 5, P]]
theta (1): [[0, 1], [5], [2, 3, 4, P]]
theta (2): [[0, 1], [5], [4], [2, 3, P]]
theta (3): [[0, 1], [5], [4], [3], [2, P]]
theta (4): [[0, 1], [5], [4], [3], [2], [P]]
theta (final): [[0, 1], [5], [4], [3], [2], [P]]

----- Fin de la récupération ------

L'état A == [0, 1]

Affichage de l'automate : 

2 mots : [a, b]
6 états : [2, 3, 4, 5, A, P]
1 entrées : [A]
1 sorties : [A]
12 transitions : 
2->a->[3]
2->b->[3]
3->a->[4]
3->b->[P]
4->a->[5]
4->b->[5]
5->a->[A]
5->b->[P]
A->a->[2]
A->b->[P]
P->a->[P]
P->b->[P]


------ Fin de la minimisation ------

