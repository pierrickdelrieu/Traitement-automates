Automate numéro : 37
Affichage de l'automate : 

2 mots : [a, b]
5 états : [0, 1, 2, 3, 4]
1 entrées : [0]
5 sorties : [0, 1, 2, 3, 4]
8 transitions : 
0->a->[1]
0->b->[0]
1->a->[2]
1->b->[4]
2->a->[x] 
2->b->[0]
3->a->[1]
3->b->[0]
4->a->[1]
4->b->[x] 

------ Tentative de minimisation de votre automate ------

Votre automate n'est pas complet à cause de l'état 2
En effet celui-ci n'a des transitions que pour [b]
Avant d'être minimisé, votre automate doit être complet, nous le complétons

------ Tentative de complétion de votre automate ------


------ Votre automate est déja déterministe ------

Votre automate n'est pas complet à cause de l'état 2
En effet celui-ci n'a des transitions que pour [b]

Votre automate est bien déterministe, il peut être complété !


------ Complétion de votre automate ------- 

Affichage de l'automate : 

2 mots : [a, b]
6 états : [0, 1, 2, 3, 4, P]
1 entrées : [0]
5 sorties : [0, 1, 2, 3, 4]
12 transitions : 
0->a->[1]
0->b->[0]
1->a->[2]
1->b->[4]
2->a->[P]
2->b->[0]
3->a->[1]
3->b->[0]
4->a->[1]
4->b->[P]
P->a->[P]
P->b->[P]


------ Complétion terminée ! ------


Votre automate est bien déterministe et complet, toutes les conditions sont remplies !


------ Début de la minimisation ------


------ Récupération de la partition finale ------

theta (0): [[0, 1, 2, 3, 4], [P]]
theta (1): [[2], [4], [0, 1, 3], [P]]
theta (2): [[2], [4], [1], [0, 3], [P]]
theta (final): [[2], [4], [1], [0, 3], [P]]

----- Fin de la récupération ------

L'état A == [0, 3]

Affichage de l'automate : 

2 mots : [a, b]
5 états : [1, 2, 4, A, P]
1 entrées : [A]
4 sorties : [1, 2, 4, A]
10 transitions : 
1->a->[2]
1->b->[4]
2->a->[P]
2->b->[A]
4->a->[1]
4->b->[P]
A->a->[1]
A->b->[A]
P->a->[P]
P->b->[P]


------ Fin de la minimisation ------

