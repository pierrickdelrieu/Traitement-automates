Automate numéro : 39
Affichage de l'automate : 

2 mots : [a, b]
4 états : [0, 1, 2, 3]
3 entrées : [0, 1, 3]
1 sorties : [1]
8 transitions : 
0->a->[1]
0->b->[2]
1->a->[1]
1->b->[2]
2->a->[0]
2->b->[1]
3->a->[1, 2]
3->b->[x] 

------ Tentative de minimisation de votre automate ------

Votre automate n'est pas déterministe car il possède 3 entrées
Votre état n'est pas complet car celui-ci n'est pas déterministe
Avant d'être minimisé, votre automate doit être complet, nous le complétons

------ Tentative de complétion de votre automate ------

Votre automate n'est pas déterministe car il possède 3 entrées

------ Tentative de déterminisation de votre automate ------


------ Début de la déterminisation ------

Affichage de l'automate : 

2 mots : [a, b]
6 états : [0.1.3, 2, 1, 0, 1.2, 0.1]
1 entrées : [0.1.3]
4 sorties : [0.1.3, 1, 1.2, 0.1]
12 transitions : 
0.1.3->a->[1.2]
0.1.3->b->[2]
2->a->[0]
2->b->[1]
1->a->[1]
1->b->[2]
0->a->[1]
0->b->[2]
1.2->a->[0.1]
1.2->b->[1.2]
0.1->a->[1]
0.1->b->[2]


------ Déterminisation terminée ! ------

------ 
Votre automate est déjà complet ------


Votre automate est bien déterministe et complet, toutes les conditions sont remplies !


------ Début de la minimisation ------


------ Récupération de la partition finale ------

theta (0): [[0.1.3, 1.2, 0.1, 1], [0, 2]]
theta (1): [[1.2], [0.1.3, 0.1, 1], [0], [2]]
theta (2): [[1.2], [0.1.3], [0.1, 1], [0], [2]]
theta (final): [[1.2], [0.1.3], [0.1, 1], [0], [2]]

----- Fin de la récupération ------

L'état A == [0.1, 1]

Affichage de l'automate : 

2 mots : [a, b]
5 états : [1.2, 0.1.3, 0, 2, A]
1 entrées : [0.1.3]
3 sorties : [1.2, 0.1.3, A]
10 transitions : 
1.2->a->[A]
1.2->b->[1.2]
0.1.3->a->[1.2]
0.1.3->b->[2]
0->a->[A]
0->b->[2]
2->a->[0]
2->b->[A]
A->a->[A]
A->b->[2]


------ Fin de la minimisation ------

