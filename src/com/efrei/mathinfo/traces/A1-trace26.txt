Automate numéro : 26
Affichage de l'automate : 

2 mots : [a, b]
4 états : [0, 1, 2, 3]
1 entrées : [1]
1 sorties : [3]
6 transitions : 
0->a->[x] 
0->b->[x] 
1->a->[2]
1->b->[2]
2->a->[0]
2->b->[3]
3->a->[3]
3->b->[3]

------ Tentative de minimisation de votre automate ------

Votre automate n'est pas complet à cause de l'état 0
En effet celui-ci n'a pas de transitions
Avant d'être minimisé, votre automate doit être complet, nous le complétons

------ Tentative de complétion de votre automate ------


------ Votre automate est déja déterministe ------

Votre automate n'est pas complet à cause de l'état 0
En effet celui-ci n'a pas de transitions

Votre automate est bien déterministe, il peut être complété !


------ Complétion de votre automate ------- 

Affichage de l'automate : 

2 mots : [a, b]
5 états : [0, 1, 2, 3, P]
1 entrées : [1]
1 sorties : [3]
10 transitions : 
0->a->[P]
0->b->[P]
1->a->[2]
1->b->[2]
2->a->[0]
2->b->[3]
3->a->[3]
3->b->[3]
P->a->[P]
P->b->[P]


------ Complétion terminée ! ------


Votre automate est bien déterministe et complet, toutes les conditions sont remplies !


------ Début de la minimisation ------


------ Récupération de la partition finale ------

theta (0): [[3], [0, 1, 2, P]]
theta (1): [[3], [2], [0, 1, P]]
theta (2): [[3], [2], [1], [0, P]]
theta (final): [[3], [2], [1], [0, P]]

----- Fin de la récupération ------

L'état A == [0, P]

Affichage de l'automate : 

2 mots : [a, b]
4 états : [1, 2, 3, A]
1 entrées : [1]
1 sorties : [3]
8 transitions : 
1->a->[2]
1->b->[2]
2->a->[A]
2->b->[3]
3->a->[3]
3->b->[3]
A->a->[A]
A->b->[A]


------ Fin de la minimisation ------

