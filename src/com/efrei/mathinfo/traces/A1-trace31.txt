Automate numéro : 31
Affichage de l'automate : 

3 mots : [a, b, *]
8 états : [0, 1, 2, 3, 4, 5, 6, 7]
1 entrées : [0]
1 sorties : [7]
12 transitions : 
0->a->[x] 
0->b->[x] 
0->*->[1, 4]
1->a->[2]
1->b->[x] 
1->*->[3]
2->a->[3]
2->b->[1]
2->*->[x] 
3->a->[x] 
3->b->[3]
3->*->[7]
4->a->[x] 
4->b->[5]
4->*->[x] 
5->a->[x] 
5->b->[6]
5->*->[x] 
6->a->[x] 
6->b->[x] 
6->*->[4, 7]
7->a->[x] 
7->b->[x] 
7->*->[x] 

------ Tentative de minimisation de votre automate ------

Votre automate est asynchrone à cause de la transition 0->*->[1, 4]

Votre automate est asynchrone, nous le synchronisons


------ Tentative de synchronisation de l'automate ------

Votre automate est asynchrone à cause de la transition 0->*->[1, 4]

	Tentative d'élimination des transitions epsilons


Epsilon clotures obtenues : 

2* == 2
0* == 0.1.3.4.7
6* == 4.6.7
5* == 5
3* == 3.7
7* == 7
1* == 1.3.7*
4* == 4

Affichage de l'automate : 

2 mots : [a, b]
8 états : [0*, 1*, 2*, 3*, 4*, 5*, 6*, 7*]
1 entrées : [0*]
5 sorties : [0*, 1*, 3*, 6*, 7*]
12 transitions : 
0*->a->[2*]
0*->b->[3*, 5*]
1*->a->[2*]
1*->b->[3*]
2*->a->[3*]
2*->b->[1*]
3*->a->[x] 
3*->b->[3*]
4*->a->[x] 
4*->b->[5*]
5*->a->[x] 
5*->b->[6*]
6*->a->[x] 
6*->b->[5*]
7*->a->[x] 
7*->b->[x] 


------ Votre automate est désormais synchrone ------

Votre automate n'est pas déterministe à cause de la transition : 0*->b->[3*, 5*]
Votre état n'est pas complet car celui-ci n'est pas déterministe
Avant d'être minimisé, votre automate doit être complet, nous le complétons

------ Tentative de complétion de votre automate ------

Votre automate n'est pas déterministe à cause de la transition : 0*->b->[3*, 5*]

------ Tentative de déterminisation de votre automate ------


------ Début de la déterminisation ------

Affichage de l'automate : 

2 mots : [a, b]
6 états : [0*, 3*.5*, 3*.6*, 2*, 1*, 3*]
1 entrées : [0*]
5 sorties : [0*, 3*.5*, 3*.6*, 1*, 3*]
9 transitions : 
0*->a->[2*]
0*->b->[3*.5*]
3*.5*->a->[x] 
3*.5*->b->[3*.6*]
3*.6*->a->[x] 
3*.6*->b->[3*.5*]
2*->a->[3*]
2*->b->[1*]
1*->a->[2*]
1*->b->[3*]
3*->a->[x] 
3*->b->[3*]


------ Déterminisation terminée ! ------

Votre automate n'est pas complet à cause de l'état 3*.5*
En effet celui-ci n'a des transitions que pour [b]

Votre automate est bien déterministe, il peut être complété !


------ Complétion de votre automate ------- 

Affichage de l'automate : 

2 mots : [a, b]
7 états : [3*.5*, 3*.6*, P, 0*, 1*, 2*, 3*]
1 entrées : [0*]
5 sorties : [3*.5*, 3*.6*, 0*, 1*, 3*]
14 transitions : 
3*.5*->a->[P]
3*.5*->b->[3*.6*]
3*.6*->a->[P]
3*.6*->b->[3*.5*]
P->a->[P]
P->b->[P]
0*->a->[2*]
0*->b->[3*.5*]
1*->a->[2*]
1*->b->[3*]
2*->a->[3*]
2*->b->[1*]
3*->a->[P]
3*->b->[3*]


------ Complétion terminée ! ------


Votre automate est bien déterministe et complet, toutes les conditions sont remplies !


------ Début de la minimisation ------


------ Récupération de la partition finale ------

theta (0): [[3*.5*, 3*.6*, 0*, 1*, 3*], [P, 2*]]
theta (1): [[3*.5*, 3*.6*, 0*, 1*, 3*], [P], [2*]]
theta (2): [[3*.5*, 3*.6*, 3*], [0*, 1*], [P], [2*]]
theta (final): [[3*.5*, 3*.6*, 3*], [0*, 1*], [P], [2*]]

----- Fin de la récupération ------

L'état A == [3*.5*, 3*.6*, 3*]

L'état B == [0*, 1*]

Affichage de l'automate : 

2 mots : [a, b]
4 états : [A, B, P, 2*]
1 entrées : [B]
2 sorties : [A, B]
8 transitions : 
A->a->[P]
A->b->[A]
B->a->[2*]
B->b->[A]
P->a->[P]
P->b->[P]
2*->a->[A]
2*->b->[B]


------ Fin de la minimisation ------

